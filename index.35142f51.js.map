{"mappings":"CAAC,WACA,IAAMA,EAAaC,SAASC,cAAc,sBACpCC,EAAgBF,SAASC,cAAc,eACvCE,EAAWH,SAASC,cAAc,SAExCF,EAAWK,iBAAiB,SAAS,WACpC,IAAMC,EAAwD,SAA7CN,EAAWO,aAAa,mBAA+B,EAExEP,EAAWQ,UAAUC,OAAO,WAC5BT,EAAWU,aAAa,iBAAkBJ,GAE1CH,EAAcK,UAAUC,OAAO,WAC/BL,EAASI,UAAUC,OAAO,Y,IAG3B,IAAME,EAAUV,SAASW,iBAAiB,gBAErCC,GAAU,EAAVC,GAAU,EAAVC,OAAUC,E,IAAf,I,IAAKC,E,gBAAA,IAAIC,EAAJD,EAAUE,MACdD,EAAOb,iBAAiB,SAAS,SAAUe,GAC1CA,EAAEC,iBAEF,IAAMC,EAAOJ,EAAOK,aAAa,QAAUL,EAAOX,aAAa,QAAU,OAEzEN,SAASC,cAAcoB,GAAME,eAAe,CAC3CC,SAAU,SACVC,MAAO,S,KARLC,EAAchB,EAAOiB,OAAAC,cAArBhB,GAAAI,EAAAU,EAAUG,QAAAC,MAAVlB,GAAU,EAAAmB,EAAAL,EAAAV,E,UAAVH,GAAU,EAAVC,EAAUkB,C,aAAVpB,GAAU,MAAVc,EAAUO,QAAVP,EAAUO,Q,YAAVpB,E,MAAAC,C,EAaDZ,GAAiBH,GAErBG,EAAcS,iBAAiB,eAAeuB,SAAQ,SAAAC,GACrDA,EAAK/B,iBAAiB,SAAS,WAC9BF,EAAcK,UAAU6B,OAAO,WAC/BrC,EAAWQ,UAAU6B,OAAO,U,MAI9B,CAvCA,GAyCD,IAAIC,WAAa,EACXC,cAAgB,IAChBC,OAASvC,SAASC,cAAc,WAEhCuC,eAAiB,W,OAAMC,OAAOC,aAAe1C,SAAS2C,gBAAgBC,S,EACtEC,YAAc,W,OAAMN,OAAOhC,UAAUuC,SAAS,O,EAEpDL,OAAOrC,iBAAiB,UAAU,WAC3BoC,iBAAmBH,aAAeQ,eAAiBL,iBAAmBF,cAErEC,OAAOhC,UAAUwC,IAAI,QAEjBP,iBAAmBH,YAAcQ,eAErCN,OAAOhC,UAAU6B,OAAO,QAG5BC,WAAaG,gB","sources":["src/js/menu.js"],"sourcesContent":["(() => {\n\tconst menuBtnRef = document.querySelector(\"[data-menu-button]\");\n\tconst mobileMenuRef = document.querySelector(\"[data-menu]\");\n\tconst pageBody = document.querySelector(\".body\");\n\n\tmenuBtnRef.addEventListener(\"click\", () => {\n\t\tconst expanded = menuBtnRef.getAttribute(\"aria-expanded\") === \"true\" || false;\n\n\t\tmenuBtnRef.classList.toggle(\"is-open\");\n\t\tmenuBtnRef.setAttribute(\"aria-expanded\", !expanded);\n\n\t\tmobileMenuRef.classList.toggle(\"is-open\");\n\t\tpageBody.classList.toggle(\"no-scroll\");\n\t});\n\n\tconst anchors = document.querySelectorAll('a[href^=\"#\"]')\n\n\tfor (let anchor of anchors) {\n\t\tanchor.addEventListener(\"click\", function (e) {\n\t\t\te.preventDefault()\n    \n\t\t\tconst goto = anchor.hasAttribute('href') ? anchor.getAttribute('href') : 'body'\n    \n\t\t\tdocument.querySelector(goto).scrollIntoView({\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t\tblock: \"start\"\n\t\t\t})\n\t\t})\n\t}\n\t\n\tif (mobileMenuRef && menuBtnRef) {\n\t\n\tmobileMenuRef.querySelectorAll('.menu__item').forEach(link => {\n\t\tlink.addEventListener('click', () => {\n\t\t\tmobileMenuRef.classList.remove('is-open')\n\t\t\tmenuBtnRef.classList.remove('is-open')\n\t\t})\n\t})\n}\n})();\n\nlet lastScroll = 0;\nconst defaultOffset = 200;\nconst header = document.querySelector('.header');\n\nconst scrollPosition = () => window.pageYOffset || document.documentElement.scrollTop;\nconst containHide = () => header.classList.contains('hide');\n\nwindow.addEventListener('scroll', () => {\n    if(scrollPosition() > lastScroll && !containHide() && scrollPosition() > defaultOffset) {\n        //scroll down\n        header.classList.add('hide');\n    }\n    else if(scrollPosition() < lastScroll && containHide()){\n        //scroll up\n        header.classList.remove('hide');\n    }\n\n    lastScroll = scrollPosition();\n})\n\n// const menu = document.querySelector('.menu__body')\n// const menuBtn = document.querySelector('.menu__icon')\n\n// const body = document.body;\n\n// if (menu && menuBtn) {\n// \tmenuBtn.addEventListener('click', e => {\n// \t\tmenu.classList.toggle('active')\n// \t\tmenuBtn.classList.toggle('active')\n// \t\tbody.classList.toggle('lock')\n// \t})\n\n// \tmenu.addEventListener('click', e => {\n// \t\tif (e.target.classList.contains('menu__body')) {\n// \t\t\tmenu.classList.remove('active')\n// \t\t\tmenuBtn.classList.remove('active')\n// \t\t\tbody.classList.remove('lock')\n// \t\t}\n// \t})\n\n// \tmenu.querySelectorAll('.menu__link').forEach(link => {\n// \t\tlink.addEventListener('click', () => {\n// \t\t\tmenu.classList.remove('active')\n// \t\t\tmenuBtn.classList.remove('active')\n// \t\t\tbody.classList.remove('lock')\n// \t\t})\n// \t})\n// }\n\n//  мои попытки сделать норм закрытие меню,тут 3 варианта\n\n// var block = document.getElementById('menuList');\n\n// document.addEventListener('click', function(e) {\n//   if (e.target.id != 'menuList') {\n//     menu.classList.toggle('is-open');\n//   }\n// });\n\t\n// const menu = document.querySelector('menu');\n// document.addEventListener('click', (e) => {\n//   const click = e.composedPath().includes(menu);\n//   if ( click ) {\n//     menu.classList.remove(\"is-open\");\n//   }\n// })\n\n\t// pageBody.addEventListener('click', function () {\n\t// \tdocument.querySelector('.menu.is-open').classList.remove('is-open');\n\t// \tthis.classList.remove('is-open');\n\t// \tbodyScrollLock.classList.remove('no-scroll');\n\t// });\n"],"names":["menuBtnRef","document","querySelector","mobileMenuRef","pageBody","addEventListener","expanded","getAttribute","classList","toggle","setAttribute","anchors","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","anchor","value","e","preventDefault","goto","hasAttribute","scrollIntoView","behavior","block","_iterator","Symbol","iterator","next","done","_loop","err","return","forEach","link","remove","lastScroll","defaultOffset","header","scrollPosition","window","pageYOffset","documentElement","scrollTop","containHide","contains","add"],"version":3,"file":"index.35142f51.js.map"}